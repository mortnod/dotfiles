[user]
	name = Morten Noddeland
	email = morten@noddeland.no

[alias]
	c = commit
	cm = commit -m
	cam = commit -am
	s = status --short --branch
  ch = checkout

  lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --
	# Log, just more space efficient and with pretty colors

	undo = reset --soft HEAD^
	# If Iâ€™ve made a mistake in making a commit, this command sets things up the way they were before the commit.
	# https://git-scm.com/docs/git-reset#git-reset-emgitresetemltmodegtltcommitgt

	unstage = reset --
	# git unstage example.txt => Remove that file from staging area

	prune = fetch --prune
	# When working on a project where others push branches to the main repository, I end up with lots of random local branches.
	# Prune deletes any local branch which has been deleted from the remote.

	stash-all = stash save --include-untracked
	# Stash untracked files as well (files that's not been added with 'git add' yet)

[core]
	excludesfile = ~/.gitignore
	ignorecase = false
	# attributesfile = ~/.gitattributes

[credential]
	helper = osxkeychain

# Push easily. http://stackoverflow.com/a/23918418/89484
[push]
	default = current

	followTags = true
	# Instead of manually pushing new tags with --follow-tags,
	# you always send your local tags up along with a git push.
	# https://git-scm.com/docs/git-config#git-config-pushfollowTags


[pager]
	# Insanely beautiful diffs
	# Requires diff-so-fancy https://github.com/so-fancy/diff-so-fancy
	show = diff-so-fancy | less --tabs=1,5 -RFX
	diff = diff-so-fancy | less --tabs=1,5 -RFX

# So much color
[color]
	ui = always
[color "diff"]
	meta = yellow bold
	commit = green bold
	frag = magenta bold
	old = red bold
	new = green bold
	whitespace = red reverse
[color "diff-highlight"]
	oldNormal = red bold
	oldHighlight = red bold 52
	newNormal = green bold
	newHighlight = green bold 22
[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green
[color "status"]
	added = green
	changed = red
	untracked = cyan

# Rebase instead of merge on `git pull` https://mislav.net/2013/02/merge-vs-rebase/
[pull]
	rebase = true
[rebase]
	autosquash = true
